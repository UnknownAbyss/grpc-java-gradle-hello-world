name: Generate Dependency Tree

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Branch to checkout'
        required: true
        default: 'master'

jobs:
  generate-deps:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout target branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.target_branch }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Pre-download and unpack Gradle distribution manually
        run: |
          # Extract distribution URL from wrapper properties
          DIST_URL=$(grep "distributionUrl" gradle/wrapper/gradle-wrapper.properties | cut -d= -f2 | sed 's/\\//g')
          echo "Distribution URL: $DIST_URL"

          # Extract file name and version
          GRADLE_ZIP_NAME=$(basename "$DIST_URL")
          echo "Gradle ZIP: $GRADLE_ZIP_NAME"

          GRADLE_VERSION=$(echo "$GRADLE_ZIP_NAME" | sed -E 's/gradle-([0-9]+\.[0-9]+(\.[0-9]+)?)-(bin|all)\.zip/\1/')
          DIST_TYPE=$(echo "$GRADLE_ZIP_NAME" | sed -E 's/gradle-[0-9]+\.[0-9]+(\.[0-9]+)?-(bin|all)\.zip/\2/')
          echo "Gradle Version: $GRADLE_VERSION"
          echo "Dist Type: $DIST_TYPE"

          # Create download path
          GRADLE_BASE="${HOME}/.gradle/wrapper/dists/gradle-${GRADLE_VERSION}-${DIST_TYPE}"
          DIR_HASH=$(echo -n "$DIST_URL" | sha256sum | cut -d ' ' -f 1)
          TARGET_DIR="${GRADLE_BASE}/${DIR_HASH}/gradle-${GRADLE_VERSION}"
          mkdir -p "$TARGET_DIR"

          # Download the zip
          echo "Attempting corporate download..."
          curl -k -L --silent --show-error --fail --max-time 30 "$DIST_URL" -o gradle.zip || DOWNLOAD_FAILED=true

          if [ "$DOWNLOAD_FAILED" = true ] || [ ! -s gradle.zip ]; then
            echo "Corporate download failed, trying public Gradle repo..."
            curl -L --silent --show-error --fail "https://services.gradle.org/distributions/${GRADLE_ZIP_NAME}" -o gradle.zip
          fi

          # Verify zip
          unzip -t gradle.zip > /dev/null || {
            echo "Downloaded file is not a valid zip archive"
            exit 1
          }

          # Extract only the contents inside gradle-${GRADLE_VERSION}/ to correct location
          unzip -q gradle.zip
          mv "gradle-${GRADLE_VERSION}"/* "$TARGET_DIR/"
          rm -rf "gradle-${GRADLE_VERSION}" gradle.zip

      - name: Generate Complete Dependency Tree from All Gradle Modules
        run: |
          echo "" > dependency-tree.txt
          find . -name "build.gradle*" | while read build_file; do
            dir=$(dirname "$build_file")
            echo "Processing $dir"
            (
              cd "$dir"
              echo "===== Dependency Tree for $dir =====" >> "$OLDPWD/dependency-tree.txt"
              ./gradlew dependencies --no-daemon --stacktrace --quiet --no-validate-url 2>&1 \
              | tee -a "$OLDPWD/dependency-tree-debug.log" \
              | grep -E "^[\\+|\\|\\-\\]" >> "$OLDPWD/dependency-tree.txt"
              echo "" >> "$OLDPWD/dependency-tree.txt"
            ) || echo "Failed to process $dir, skipping..." >> "$OLDPWD/dependency-tree.txt"
          done

      - name: Upload dependency tree artifact
        uses: actions/upload-artifact@v4
        with:
          name: dependency-tree
          path: |
            dependency-tree.txt
            dependency-tree-debug.log
