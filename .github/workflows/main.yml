name: Generate Dependency Tree

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Branch to checkout'
        required: true
        default: 'master'

jobs:
  generate-deps:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout target branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.target_branch }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11' # Or lower if you're on an old Gradle version

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew
      
      - name: Pre-download Gradle distribution and unpack correctly
        run: |
          # Extract and clean distribution URL
          DIST_URL=$(grep "^distributionUrl=" gradle/wrapper/gradle-wrapper.properties | cut -d= -f2-)
          DIST_URL_CLEAN=$(echo "$DIST_URL" | sed 's/\\//g')
          echo "📦 Distribution URL: $DIST_URL_CLEAN"
      
          # Extract ZIP filename, version, and distribution type
          GRADLE_ZIP_NAME=$(basename "$DIST_URL_CLEAN")
          GRADLE_VERSION=$(echo "$GRADLE_ZIP_NAME" | sed -E 's/gradle-([0-9]+\.[0-9]+(\.[0-9]+)?)-(bin|all)\.zip/\1/')
          DIST_TYPE=$(echo "$GRADLE_ZIP_NAME" | sed -E 's/gradle-[0-9]+\.[0-9]+(\.[0-9]+)?-(bin|all)\.zip/\2/')
          echo "📌 Gradle ZIP: $GRADLE_ZIP_NAME"
          echo "🔢 Gradle Version: $GRADLE_VERSION"
          echo "🗃️ Dist Type: $DIST_TYPE"
      
          # Compute Gradle directory hash (MD5 + base36)
          md5_hex=$(echo -n "$DIST_URL" | md5sum | awk '{print $1}')
          DIR_HASH=$(python3 -c "
          d = int('$md5_hex', 16)
          c = '0123456789abcdefghijklmnopqrstuvwxyz'
          b = ''
          while d > 0:
              d, r = divmod(d, 36)
              b = c[r] + b
          print(b)")
          echo "🔐 Gradle directory hash: $DIR_HASH"
      
          # Set paths
          GRADLE_HOME="${HOME}/.gradle/wrapper/dists/gradle-${GRADLE_VERSION}-${DIST_TYPE}"
          HASH_DIR="${GRADLE_HOME}/${DIR_HASH}"
          ZIP_PATH="${HASH_DIR}/${GRADLE_ZIP_NAME}"
          OK_PATH="${ZIP_PATH}.ok"
          DEST_DIR="${HASH_DIR}/gradle-${GRADLE_VERSION}"
      
          mkdir -p "$HASH_DIR"
      
          # Download Gradle distribution
          echo "🌐 Attempting corporate download..."
          curl -k -L --silent --show-error --fail --max-time 30 "$DIST_URL_CLEAN" -o "$ZIP_PATH" || DOWNLOAD_FAILED=true
      
          if [ "$DOWNLOAD_FAILED" = true ] || [ ! -s "$ZIP_PATH" ]; then
            echo "⚠️ Corporate download failed, trying public Gradle repo..."
            PUBLIC_URL="https://services.gradle.org/distributions/${GRADLE_ZIP_NAME}"
            echo "🔄 Downloading from $PUBLIC_URL"
            curl -L --silent --show-error --fail "$PUBLIC_URL" -o "$ZIP_PATH"
          fi
      
          if [ ! -s "$ZIP_PATH" ]; then
            echo "❌ Failed to download Gradle ZIP"
            exit 1
          fi
      
          echo "🧪 Verifying ZIP integrity..."
          unzip -t "$ZIP_PATH" > /dev/null || {
            echo "❌ ZIP file is corrupt or invalid"
            exit 1
          }
      
          # Unpack and prepare structure
          echo "📂 Unpacking Gradle to $DEST_DIR"
          unzip -q "$ZIP_PATH" -d "${GRADLE_HOME}/unzipped-temp"
          mv "${GRADLE_HOME}/unzipped-temp/gradle-${GRADLE_VERSION}" "$HASH_DIR/"
          rm -rf "${GRADLE_HOME}/unzipped-temp"
      
          # Finalize
          echo "✅ Creating .ok marker: ${OK_PATH}"
          touch "$OK_PATH"

          sudo apt-get update && sudo apt-get install -y tree
          echo "📁 Final directory layout:"
          tree "$HASH_DIR"
          
      - name: Generate Complete Dependency Tree from All Gradle Modules
        run: |
          echo "" > dependency-tree.txt
          find . -name "build.gradle*" | while read build_file; do
            dir=$(dirname "$build_file")
            echo "Processing $dir"
            (
              cd "$dir"
              echo "===== Dependency Tree for $dir =====" >> "$OLDPWD/dependency-tree.txt"
              ./gradlew dependencies --no-daemon --stacktrace --quiet 2>&1 \
              | tee -a "$OLDPWD/dependency-tree-debug.log" \
              | grep -E "^[\\+|\\|\\-\\]" >> "$OLDPWD/dependency-tree.txt"
              echo "" >> "$OLDPWD/dependency-tree.txt"
            ) || echo "Failed to process $dir, skipping..." >> "$OLDPWD/dependency-tree.txt"
          done

      - name: Upload dependency tree artifact
        uses: actions/upload-artifact@v4
        with:
          name: dependency-tree
          path: |
            dependency-tree.txt
            dependency-tree-debug.log
